/*
Camunda Cloud Management API

Manage Camunda Cloud Clusters and API Clients via API.

API version: 1.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ParametersChannels struct for ParametersChannels
type ParametersChannels struct {
	AllowedGenerations []ParametersAllowedGenerations `json:"allowedGenerations"`
	DefaultGeneration ParametersAllowedGenerations `json:"defaultGeneration"`
	Name string `json:"name"`
	Uuid string `json:"uuid"`
}

// NewParametersChannels instantiates a new ParametersChannels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParametersChannels(allowedGenerations []ParametersAllowedGenerations, defaultGeneration ParametersAllowedGenerations, name string, uuid string) *ParametersChannels {
	this := ParametersChannels{}
	this.AllowedGenerations = allowedGenerations
	this.DefaultGeneration = defaultGeneration
	this.Name = name
	this.Uuid = uuid
	return &this
}

// NewParametersChannelsWithDefaults instantiates a new ParametersChannels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParametersChannelsWithDefaults() *ParametersChannels {
	this := ParametersChannels{}
	return &this
}

// GetAllowedGenerations returns the AllowedGenerations field value
func (o *ParametersChannels) GetAllowedGenerations() []ParametersAllowedGenerations {
	if o == nil {
		var ret []ParametersAllowedGenerations
		return ret
	}

	return o.AllowedGenerations
}

// GetAllowedGenerationsOk returns a tuple with the AllowedGenerations field value
// and a boolean to check if the value has been set.
func (o *ParametersChannels) GetAllowedGenerationsOk() ([]ParametersAllowedGenerations, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowedGenerations, true
}

// SetAllowedGenerations sets field value
func (o *ParametersChannels) SetAllowedGenerations(v []ParametersAllowedGenerations) {
	o.AllowedGenerations = v
}

// GetDefaultGeneration returns the DefaultGeneration field value
func (o *ParametersChannels) GetDefaultGeneration() ParametersAllowedGenerations {
	if o == nil {
		var ret ParametersAllowedGenerations
		return ret
	}

	return o.DefaultGeneration
}

// GetDefaultGenerationOk returns a tuple with the DefaultGeneration field value
// and a boolean to check if the value has been set.
func (o *ParametersChannels) GetDefaultGenerationOk() (*ParametersAllowedGenerations, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DefaultGeneration, true
}

// SetDefaultGeneration sets field value
func (o *ParametersChannels) SetDefaultGeneration(v ParametersAllowedGenerations) {
	o.DefaultGeneration = v
}

// GetName returns the Name field value
func (o *ParametersChannels) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ParametersChannels) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ParametersChannels) SetName(v string) {
	o.Name = v
}

// GetUuid returns the Uuid field value
func (o *ParametersChannels) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ParametersChannels) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ParametersChannels) SetUuid(v string) {
	o.Uuid = v
}

func (o ParametersChannels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["allowedGenerations"] = o.AllowedGenerations
	}
	if true {
		toSerialize["defaultGeneration"] = o.DefaultGeneration
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableParametersChannels struct {
	value *ParametersChannels
	isSet bool
}

func (v NullableParametersChannels) Get() *ParametersChannels {
	return v.value
}

func (v *NullableParametersChannels) Set(val *ParametersChannels) {
	v.value = val
	v.isSet = true
}

func (v NullableParametersChannels) IsSet() bool {
	return v.isSet
}

func (v *NullableParametersChannels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParametersChannels(val *ParametersChannels) *NullableParametersChannels {
	return &NullableParametersChannels{value: val, isSet: true}
}

func (v NullableParametersChannels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParametersChannels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


