/*
Camunda Cloud Management API

Manage Camunda Cloud Clusters and API Clients via API.

API version: 1.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterLinks Endpoints for the components running in your Camunda Cloud cluster.
type ClusterLinks struct {
	Optimize *string `json:"optimize,omitempty"`
	Tasklist *string `json:"tasklist,omitempty"`
	Operate *string `json:"operate,omitempty"`
	Zeebe *string `json:"zeebe,omitempty"`
}

// NewClusterLinks instantiates a new ClusterLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLinks() *ClusterLinks {
	this := ClusterLinks{}
	return &this
}

// NewClusterLinksWithDefaults instantiates a new ClusterLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLinksWithDefaults() *ClusterLinks {
	this := ClusterLinks{}
	return &this
}

// GetOptimize returns the Optimize field value if set, zero value otherwise.
func (o *ClusterLinks) GetOptimize() string {
	if o == nil || o.Optimize == nil {
		var ret string
		return ret
	}
	return *o.Optimize
}

// GetOptimizeOk returns a tuple with the Optimize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLinks) GetOptimizeOk() (*string, bool) {
	if o == nil || o.Optimize == nil {
		return nil, false
	}
	return o.Optimize, true
}

// HasOptimize returns a boolean if a field has been set.
func (o *ClusterLinks) HasOptimize() bool {
	if o != nil && o.Optimize != nil {
		return true
	}

	return false
}

// SetOptimize gets a reference to the given string and assigns it to the Optimize field.
func (o *ClusterLinks) SetOptimize(v string) {
	o.Optimize = &v
}

// GetTasklist returns the Tasklist field value if set, zero value otherwise.
func (o *ClusterLinks) GetTasklist() string {
	if o == nil || o.Tasklist == nil {
		var ret string
		return ret
	}
	return *o.Tasklist
}

// GetTasklistOk returns a tuple with the Tasklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLinks) GetTasklistOk() (*string, bool) {
	if o == nil || o.Tasklist == nil {
		return nil, false
	}
	return o.Tasklist, true
}

// HasTasklist returns a boolean if a field has been set.
func (o *ClusterLinks) HasTasklist() bool {
	if o != nil && o.Tasklist != nil {
		return true
	}

	return false
}

// SetTasklist gets a reference to the given string and assigns it to the Tasklist field.
func (o *ClusterLinks) SetTasklist(v string) {
	o.Tasklist = &v
}

// GetOperate returns the Operate field value if set, zero value otherwise.
func (o *ClusterLinks) GetOperate() string {
	if o == nil || o.Operate == nil {
		var ret string
		return ret
	}
	return *o.Operate
}

// GetOperateOk returns a tuple with the Operate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLinks) GetOperateOk() (*string, bool) {
	if o == nil || o.Operate == nil {
		return nil, false
	}
	return o.Operate, true
}

// HasOperate returns a boolean if a field has been set.
func (o *ClusterLinks) HasOperate() bool {
	if o != nil && o.Operate != nil {
		return true
	}

	return false
}

// SetOperate gets a reference to the given string and assigns it to the Operate field.
func (o *ClusterLinks) SetOperate(v string) {
	o.Operate = &v
}

// GetZeebe returns the Zeebe field value if set, zero value otherwise.
func (o *ClusterLinks) GetZeebe() string {
	if o == nil || o.Zeebe == nil {
		var ret string
		return ret
	}
	return *o.Zeebe
}

// GetZeebeOk returns a tuple with the Zeebe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLinks) GetZeebeOk() (*string, bool) {
	if o == nil || o.Zeebe == nil {
		return nil, false
	}
	return o.Zeebe, true
}

// HasZeebe returns a boolean if a field has been set.
func (o *ClusterLinks) HasZeebe() bool {
	if o != nil && o.Zeebe != nil {
		return true
	}

	return false
}

// SetZeebe gets a reference to the given string and assigns it to the Zeebe field.
func (o *ClusterLinks) SetZeebe(v string) {
	o.Zeebe = &v
}

func (o ClusterLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Optimize != nil {
		toSerialize["optimize"] = o.Optimize
	}
	if o.Tasklist != nil {
		toSerialize["tasklist"] = o.Tasklist
	}
	if o.Operate != nil {
		toSerialize["operate"] = o.Operate
	}
	if o.Zeebe != nil {
		toSerialize["zeebe"] = o.Zeebe
	}
	return json.Marshal(toSerialize)
}

type NullableClusterLinks struct {
	value *ClusterLinks
	isSet bool
}

func (v NullableClusterLinks) Get() *ClusterLinks {
	return v.value
}

func (v *NullableClusterLinks) Set(val *ClusterLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLinks(val *ClusterLinks) *NullableClusterLinks {
	return &NullableClusterLinks{value: val, isSet: true}
}

func (v NullableClusterLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


