/*
Camunda Cloud Management API

Manage Camunda Cloud Clusters and API Clients via API.

API version: 1.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Cluster Describing a Camunda Cloud cluster running in your organization. For reference, use the UUID.
type Cluster struct {
	// The ID used in all further API operations referencing your cluster.
	Uuid string `json:"uuid"`
	Name string `json:"name"`
	Created time.Time `json:"created"`
	PlanType ClusterPlanType `json:"planType"`
	Region ClusterRegion `json:"region"`
	Generation ClusterGeneration `json:"generation"`
	Channel ClusterChannel `json:"channel"`
	Status *ClusterStatus2 `json:"status,omitempty"`
	Links ClusterLinks `json:"links"`
}

// NewCluster instantiates a new Cluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCluster(uuid string, name string, created time.Time, planType ClusterPlanType, region ClusterRegion, generation ClusterGeneration, channel ClusterChannel, links ClusterLinks) *Cluster {
	this := Cluster{}
	this.Uuid = uuid
	this.Name = name
	this.Created = created
	this.PlanType = planType
	this.Region = region
	this.Generation = generation
	this.Channel = channel
	this.Links = links
	return &this
}

// NewClusterWithDefaults instantiates a new Cluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterWithDefaults() *Cluster {
	this := Cluster{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *Cluster) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *Cluster) SetUuid(v string) {
	o.Uuid = v
}

// GetName returns the Name field value
func (o *Cluster) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Cluster) SetName(v string) {
	o.Name = v
}

// GetCreated returns the Created field value
func (o *Cluster) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Cluster) SetCreated(v time.Time) {
	o.Created = v
}

// GetPlanType returns the PlanType field value
func (o *Cluster) GetPlanType() ClusterPlanType {
	if o == nil {
		var ret ClusterPlanType
		return ret
	}

	return o.PlanType
}

// GetPlanTypeOk returns a tuple with the PlanType field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetPlanTypeOk() (*ClusterPlanType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlanType, true
}

// SetPlanType sets field value
func (o *Cluster) SetPlanType(v ClusterPlanType) {
	o.PlanType = v
}

// GetRegion returns the Region field value
func (o *Cluster) GetRegion() ClusterRegion {
	if o == nil {
		var ret ClusterRegion
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetRegionOk() (*ClusterRegion, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *Cluster) SetRegion(v ClusterRegion) {
	o.Region = v
}

// GetGeneration returns the Generation field value
func (o *Cluster) GetGeneration() ClusterGeneration {
	if o == nil {
		var ret ClusterGeneration
		return ret
	}

	return o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetGenerationOk() (*ClusterGeneration, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Generation, true
}

// SetGeneration sets field value
func (o *Cluster) SetGeneration(v ClusterGeneration) {
	o.Generation = v
}

// GetChannel returns the Channel field value
func (o *Cluster) GetChannel() ClusterChannel {
	if o == nil {
		var ret ClusterChannel
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetChannelOk() (*ClusterChannel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *Cluster) SetChannel(v ClusterChannel) {
	o.Channel = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Cluster) GetStatus() ClusterStatus2 {
	if o == nil || o.Status == nil {
		var ret ClusterStatus2
		return ret
	}
	return *o.Status
}

// GetStatus2Ok returns a tuple with the Status2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetStatusOk() (*ClusterStatus2, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus2 returns a boolean if a field has been set.
func (o *Cluster) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus2 gets a reference to the given ClusterStatus2 and assigns it to the Status2 field.
func (o *Cluster) SetStatus(v ClusterStatus2) {
	o.Status = &v
}

// GetLinks returns the Links field value
func (o *Cluster) GetLinks() ClusterLinks {
	if o == nil {
		var ret ClusterLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Cluster) GetLinksOk() (*ClusterLinks, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Cluster) SetLinks(v ClusterLinks) {
	o.Links = v
}

func (o Cluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["planType"] = o.PlanType
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["generation"] = o.Generation
	}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableCluster struct {
	value *Cluster
	isSet bool
}

func (v NullableCluster) Get() *Cluster {
	return v.value
}

func (v *NullableCluster) Set(val *Cluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCluster(val *Cluster) *NullableCluster {
	return &NullableCluster{value: val, isSet: true}
}

func (v NullableCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


